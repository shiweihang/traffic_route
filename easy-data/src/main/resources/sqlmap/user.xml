<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.laulyl.data.declare.po.User">

	<sql id="selectColumnSQL">
		<![CDATA[
	    	SELECT 
				id id,
				nick_name nickName,
				phone_number phoneNumber,
				email email,
				gender gender,
				age age,
				head_icon headIcon,
				identifier_number identifierNumber,
				identifier_icon identifierIcon,
				create_time createTime,
				update_time updateTime,
				score score,
				state state,
				user_type userType
			FROM tr_user
	    ]]>
	</sql>

	<sql id="selectCountSQL">
		<![CDATA[
	    	SELECT COUNT(1) count FROM tr_user
	    ]]>
	</sql>

	<sql id="deleteSQL">
		<![CDATA[
	    	DELETE FROM tr_user
	    ]]>
	</sql>

	<sql id="updateSQL">
		UPDATE tr_user
			<trim prefix="SET" suffixOverrides=",">
				<if test="null!=prop.nickName and ''!=prop.nickName">nick_name=#{prop.nickName},</if>
				<if test="null!=prop.phoneNumber and ''!=prop.phoneNumber">phone_number=#{prop.phoneNumber},</if>
				<if test="null!=prop.email and ''!=prop.email">email=#{prop.email},</if>
				<if test="null!=prop.gender">gender=#{prop.gender},</if>
				<if test="null!=prop.age">age=#{prop.age},</if>
				<if test="null!=prop.headIcon and ''!=prop.headIcon">head_icon=#{prop.headIcon},</if>
				<if test="null!=prop.identifierNumber and ''!=prop.identifierNumber">identifier_number=#{prop.identifierNumber},</if>
				<if test="null!=prop.identifierIcon and ''!=prop.identifierIcon">identifier_icon=#{prop.identifierIcon},</if>
				<if test="null!=prop.createTime">create_time=#{prop.createTime},</if>
				<if test="null!=prop.updateTime">update_time=#{prop.updateTime},</if>
				<if test="null!=prop.score">score=#{prop.score},</if>
				<if test="null!=prop.state">state=#{prop.state},</if>
				<if test="null!=prop.userType">user_type=#{prop.userType},</if>
			</trim>
	</sql>

	<sql id="whereAllSQL">
		<trim prefix="WHERE" prefixOverrides="AND|OR" suffixOverrides=",">
			<if test="null!=nickName and ''!=nickName">and nick_name like CONCAT('%','${nickName}','%')</if>
			<if test="null!=phoneNumber and ''!=phoneNumber">and phone_number like CONCAT('%','${phoneNumber}','%')</if>
			<if test="null!=email and ''!=email">and email like CONCAT('%','${email}','%')</if>
			<if test="null!=gender">and gender=#{gender}</if>
			<if test="null!=age">and age=#{age}</if>
			<if test="null!=headIcon and ''!=headIcon">and head_icon like CONCAT('%','${headIcon}','%')</if>
			<if test="null!=identifierNumber and ''!=identifierNumber">and identifier_number like CONCAT('%','${identifierNumber}','%')</if>
			<if test="null!=identifierIcon and ''!=identifierIcon">and identifier_icon like CONCAT('%','${identifierIcon}','%')</if>
			<if test="null!=startCreateTime"><![CDATA[ and create_time>=#{startCreateTime}]]></if>
			<if test="null!=endCreateTime"><![CDATA[ and create_time<=#{endCreateTime}]]></if>
			<if test="null!=startUpdateTime"><![CDATA[ and update_time>=#{startUpdateTime}]]></if>
			<if test="null!=endUpdateTime"><![CDATA[ and update_time<=#{endUpdateTime}]]></if>
			<if test="null!=score">and score=#{score}</if>
			<if test="null!=state">and state=#{state}</if>
			<if test="null!=userType">and user_type=#{userType}</if>
			<if test="null!=keys">id IN <foreach item="id" collection="keys" open="(" separator="," close=")">#{id}</foreach></if>
		</trim>
	</sql>

	<sql id="whereIdSQL">
		<![CDATA[
	    	WHERE id=#{PRIMARYKEY}
	    ]]>
	</sql>

	<sql id="orderBySQL">
		<if test="null!=sortProperty and null!=sortOrder and ''!=sortProperty and ''!=sortOrder ">ORDER BY ${sortProperty} ${sortOrder}</if>
	</sql>

	<sql id="limitSQL">
		<if test="null!=startIndex">limit #{startIndex}<if test="null!=endIndex">, #{endIndex}</if></if>
	</sql>

	<insert id="insert" parameterType="user" useGeneratedKeys="true" keyProperty="id">
	    <![CDATA[
	    	INSERT INTO tr_user(nick_name,phone_number,email,gender,age,head_icon,identifier_number,identifier_icon,create_time,update_time,score,state,user_type)
			VALUES(#{nickName},#{phoneNumber},#{email},#{gender},#{age},#{headIcon},#{identifierNumber},#{identifierIcon},#{createTime},#{updateTime},#{score},#{state},#{userType})
	     ]]>
	</insert>

	<delete id="deleteById" parameterType="Long">
		<include refid="deleteSQL"/>
		<include refid="whereIdSQL"/>
	</delete>

	<delete id="delete" parameterType="map">
		<include refid="deleteSQL"/>
		<include refid="whereAllSQL"/>
	</delete>

	<update id="updateById" parameterType="Long">
		<include refid="updateSQL"/>
		<include refid="whereIdSQL"/>
	</update>

	<update id="update" parameterType="map">
		<include refid="updateSQL"/>
		<include refid="whereAllSQL"/>
	</update>

	<select id="selectById" parameterType="Long" resultType="user">
		<include refid="selectColumnSQL"/>
		<include refid="whereIdSQL"/>
	</select>

	<select id="selectList" parameterType="map" resultType="user">
		<include refid="selectColumnSQL"/>
		<include refid="whereAllSQL"/>
		<include refid="orderBySQL"/>
		<include refid="limitSQL"/>
	</select>

	<select id="selectCount" parameterType="map" resultType="int">
		<include refid="selectCountSQL"/>
		<include refid="whereAllSQL"/>
	</select>
</mapper>